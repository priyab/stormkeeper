// Generated by CoffeeScript 1.6.1
(function() {
  var argv, config, fs, util;

  argv = require('optimist').usage('Start stormkeeper with a configuration file.\nUsage: $0').demand('c')["default"]('c', '/etc/stormstack/stormkeeper.json').alias('c', 'config').describe('c', 'location of stormkeeper configuration file').argv;

  util = require('util');

  util.log("stormkeeper coming up as new storm token collector...");

  fs = require('fs');

  config = null;

  try {
    config = JSON.parse(fs.readFileSync(argv.config));
  } catch (error) {
    util.log(error);
    util.log("stormkeeper using default storm parameters...");
    config = {
      port: 8333,
      logfile: "/var/log/stormkeeper.log",
      datadir: "/var/stormkeeper",
      serialKey: "unknown"
    };
  } finally {
    util.log("stormkeeper infused with " + JSON.stringify(config));
  }

  try {
    if (!fs.existsSync("" + config.datadir)) {
      fs.mkdirSync("" + config.datadir);
    }
    if (!fs.existsSync("" + config.datadir + "/db")) {
      fs.mkdirSync("" + config.datadir + "/db");
    }
    if (!fs.existsSync("" + config.datadir + "/certs")) {
      fs.mkdirSync("" + config.datadir + "/certs");
    }
  } catch (error) {
    util.log("Error in creating data dirs");
  }

  this.app = require('zappajs')(config.port, function() {
    var _this = this;
    this.configure(function() {
      _this.use('bodyParser', 'methodOverride', _this.app.router, 'static');
      return _this.set({
        'basepath': '/v1.0'
      });
    });
    this.configure({
      development: function() {
        return _this.use({
	    :q!
            ERRORHANDLER: {
            DUMPEXCEPTIONSu: true,
            showStack: true
          }
        });
      },
      production: function() {
        return _this.use('errorHandler');
      }
    });
    this.enable('serve jquery', 'minify');
    return this.include('./api');
  }).app;

}).call(this);
